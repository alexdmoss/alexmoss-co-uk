stages:
  - build
  - deploy
  - smoke

variables:
  IMAGE_NAME: eu.gcr.io/${GCP_PROJECT_ID}/moss-work

build:
  stage: build
  only:
  - master
  image: mosstech/gcloud-and-docker:390.0.0
  variables:
    DOCKER_HOST: tcp://docker:2375/
    DOCKER_DRIVER: overlay2
  services:
    - docker:dind
  before_script:
  - echo "${GOOGLE_CREDENTIALS}" | gcloud auth activate-service-account --key-file -
  - gcloud auth configure-docker --quiet
  script:
    - ./go build

deploy:
  stage: deploy
  only:
  - master
  image: mosstech/ci-tools:latest
  before_script:
  - echo "${GOOGLE_CREDENTIALS}" | gcloud auth activate-service-account --key-file -
  - region=$(gcloud container clusters list --project=${GCP_PROJECT_ID} --filter "NAME=${CLUSTER_NAME}" --format "value(zone)")
  - gcloud container clusters get-credentials ${CLUSTER_NAME} --project=${GCP_PROJECT_ID} --region=${region}
  script:
    - ./go deploy

smoke:
  stage: smoke
  only:
    - master
  image: mosstech/ci-tools:latest
  dependencies:
    - deploy
  script:
    - ./go smoke

build-run:
  stage: build
  image: mosstech/gcloud-and-docker:390.0.0
  variables:
    DOCKER_HOST: tcp://docker:2375/
    DOCKER_DRIVER: overlay2
    IMAGE_NAME: eu.gcr.io/${MW_PROJECT_ID}/alexmoss-co-uk
  services:
    - docker:dind
  before_script:
  - echo "${TEMP_RUN_CREDENTIALS}" | gcloud auth activate-service-account --key-file -
  - gcloud auth configure-docker --quiet
  script:
    - ./go build
    
deploy-run:
  stage: deploy
  image: mosstech/ci-tools:latest
  variables:
    IMAGE_NAME: eu.gcr.io/${MW_PROJECT_ID}/alexmoss-co-uk
  before_script:
  - echo "${TEMP_RUN_CREDENTIALS}" | gcloud auth activate-service-account --key-file -
  script:
    - ./deploy.sh
stages:
  - build
  - publish
  - deploy
  - smoke

variables:
  IMAGE_NAME: europe-docker.pkg.dev/${GCP_PROJECT_ID}/alexos/alexmoss-co-uk
  PROJECT_ID: ${MW_PROJECT_ID}
  SERVICE: alexmoss-co-uk
  DOMAIN: alexmoss.co.uk
  REGION: europe-west1
  PORT: "32080"

build:
  stage: build
  only:
  - master
  image: mosstech/gcloud-and-docker:424.0.0
  script:
    - ./go build
  artifacts:
    paths:
      - www/
    when: on_success
    expire_in: "1 day"

publish:
  stage: publish
  only:
  - master
  image:
    name: gcr.io/kaniko-project/executor:debug
    entrypoint: [""]
  variables:
    GOOGLE_APPLICATION_CREDENTIALS: ${CI_PROJECT_DIR}/kaniko.json
  before_script:
  - mkdir -p /kaniko/.docker
  - echo "${GOOGLE_CREDENTIALS}" > ${CI_PROJECT_DIR}/kaniko.json
  script:
    - /kaniko/executor --context "${CI_PROJECT_DIR}" --dockerfile "${CI_PROJECT_DIR}/Dockerfile" --destination "${IMAGE_NAME}:${CI_COMMIT_SHA}"
  after_script:
  - rm -f ${CI_PROJECT_DIR}/kaniko.json 

deploy:
  stage: deploy
  only:
  - master
  image: al3xos/ci-tools:latest
  before_script:
  - echo "${GOOGLE_CREDENTIALS}" | gcloud auth activate-service-account --key-file -
  - region=$(gcloud container clusters list --project=${GCP_PROJECT_ID} --filter "NAME=${CLUSTER_NAME}" --format "value(zone)")
  - gcloud container clusters get-credentials ${CLUSTER_NAME} --project=${GCP_PROJECT_ID} --region=${region}
  script:
    - ./go deploy

smoke:
  stage: smoke
  only:
    - master
  image: al3xos/ci-tools:latest
  dependencies:
    - deploy
  script:
    - ./go smoke

### not running this experiment currently
# build-run:
#   stage: build
#   image: mosstech/gcloud-and-docker:390.0.0
#   rules:
#   - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH
#   services:
#     - docker:dind
#   before_script:
#   - until docker info >/dev/null; do sleep 1; echo "Waiting for docker startup"; done
#   - echo "${RUN_CREDENTIALS}" | gcloud auth activate-service-account --key-file -
#   - gcloud auth configure-docker --quiet
#   script:
#     - ./scripts/build.sh

# deploy-run:
#   stage: deploy
#   image: mosstech/ci-tools:latest
#   rules:
#   - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH
#   before_script:
#   - echo "${RUN_CREDENTIALS}" | gcloud auth activate-service-account --key-file -
#   script:
#     - ./scripts/deploy.sh


